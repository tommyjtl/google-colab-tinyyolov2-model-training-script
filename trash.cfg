[net]
# Testing
# batch=1
# subdivisions=1
Training
batch=64
subdivisions=16
# set network size width=416 height=416 or any value multiple of 32:
width=224
height=224
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
# change line max_batches to (classes*2000 but not less than 4000), f.e. max_batches=6000 if you train for 3 classes
max_batches=8000
policy=steps
# change line steps to 80% and 90% of max_batches, f.e. steps=4800,5400
steps=6400,7200
scales=.1,.1

[convolutional]
batch_normalize=1
filters=16
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

#[maxpool]
#size=2
#stride=1

# [convolutional]
# batch_normalize=1
#filters=1024
#size=3
#stride=1
#pad=1
#activation=leaky

###########

#[convolutional]
#batch_normalize=1
#size=3
#stride=1
#pad=1
#filters=512
#activation=leaky

[convolutional]
size=1
stride=1
pad=1
# change [filters=255] to filters=(classes + 5)x3 in the 3 [convolutional] before each [yolo] layer, keep in mind that it only has to be the last [convolutional] before each of the [yolo] layers.
filters=27
activation=linear

[region]
anchors =  0.57273, 0.677385, 1.87446, 2.06253, 3.33843, 5.47434, 7.88282, 3.52778, 9.77052, 9.16828
bias_match=1
# change classes to the number of objects that you want to recognize
classes=4
coords=4
num=5
softmax=1
jitter=.2
rescore=0

object_scale=5
noobject_scale=1
class_scale=1
coord_scale=1

absolute=1
thresh = .6
random=1
